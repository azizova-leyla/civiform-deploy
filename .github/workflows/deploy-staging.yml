name: Probe and Deploy Staging

on:
  # Setting this enables manually triggering workflow in the GitHub UI
  # see https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
  workflow_dispatch: {}

permissions: read-all

# Two probers running at once can break each other.
concurrency:
  group: stagingenvironment
  cancel-in-progress: true

jobs:
  run_prober:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
#      - name: Deploy Seattle staging
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
#        run: bin/deploy -e staging -i civiform/civiform:latest

#      - name: Run prober test
#        env:
#          TEST_USER_LOGIN: ${{ secrets.TEST_USER_LOGIN }}
#          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
#        run: bin/run-prober
      - name: Get Docker Version
        run: docker version
        
      - name: Get Docker Plugins List
        run: docker plugin ls
        
      - name: Get Docker Compose v2
        run: docker compose version

      - name: Get Docker-Compose v1
        run: docker-compose version
        
      - name: Add gpg
        run: |
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        
      - name: Add apt repo
        run: |
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

      
      - name: Install Docker Compose v2 new
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose-plugin
        
      - name: Get Docker Compose v2
        run: docker compose version
        
      - name: Get Docker Compose Path
        run: which docker-compose
        
        
        
        
        
